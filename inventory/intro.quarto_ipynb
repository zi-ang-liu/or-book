{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: 在庫管理とは\n",
        "format:\n",
        "  html:\n",
        "    code-fold: true\n",
        "jupyter: python3\n",
        "---\n",
        "\n",
        "商店・工場・倉庫などで、原材料・部品・製品などを適切に管理することを**在庫管理**（Inventory Management）という。一般的に、在庫管理の目的は、顧客の需要を満たしつつ、在庫に関わる費用を最小化することである。\n",
        "\n",
        "::: {.callout-note}\n",
        "豊田自動車が提唱した**ジャストインタイム**（Just In Time, JIT）は、生産方式としてよく知られている。\n",
        "\n",
        "JIT とは必要なものを、必要な時に、必要な量だけ生産することである。JIT の目的は、在庫を最小限に抑え、効率的な生産を実現することである。\n",
        "\n",
        "アメリカの研究者らは、その生産方式を体系化し、**リーン生産方式**（Lean Manufacturing）という概念を提唱した。\n",
        "\n",
        "- [トヨタ生産方式](https://global.toyota/jp/company/vision-and-philosophy/production-system/)\n",
        "\n",
        ":::\n",
        "\n",
        "在庫が多すぎると、保管費用がかかる。逆に、在庫が少なすぎると、欠品が発生し、顧客の需要を満たせなくなる。在庫管理は次の二つの問題を決定する。\n",
        "\n",
        "1. どのくらいの量を発注するか？（発注量）\n",
        "2. いつ発注するか？（発注時期）\n",
        "\n",
        "科学的在庫管理（Scientific Inventory Management）では、これらの問題に答えるために、次の手順で在庫管理を行う。\n",
        "\n",
        "1. 在庫システムを数学モデルとして定式化する。\n",
        "2. 最適な発注量と発注時期を決定する。\n",
        "\n",
        "## 在庫モデルの分類\n",
        "\n",
        "在庫モデルは、次のような要素で分類される。\n",
        "\n",
        "需要（demand）\n",
        ": 需要が決定論的 (Deterministic) か確率的（Stochastic）か。\n",
        "\n",
        "観測（review）\n",
        ": 在庫量を連続観測 (Continuous Review) するか、周期観測 (Periodic Review) するか。連続観測の場合、在庫量が連続的に観測でき、いつでも発注が可能である。周期観測の場合、一定の期間（例えば1週間）ごとに在庫量を観測する。\n",
        "\n",
        "リードタイム（lead time）\n",
        ": 発注から納品までの期間。調達期間とも呼ばれる。リードタイムが決定論的か確率的か。また、リードタイムが0かどうか。在庫モデルを単純化するために、リードタイムを0とし、発注から納品までの期間を無視することもある。\n",
        "\n",
        "バックオーダー（backorder）\n",
        ": バックオーダーが許容されるかどうか。需要が在庫を上回った場合、バックオーダーが許容されると、欠品が発生しても、後で需要を満たすことができる。バックオーダーが許容されない場合、欠品が発生すると、上回った需要は失われ、機会損失が発生する。\n",
        "\n",
        "計画期間（planning horizon）\n",
        ": 単一期間 (Single Period) か、複数期間 (Multi Period) か、無限 (Infinite) か。\n",
        "\n",
        "以下の表に、需要と観測に基づく、古典的な在庫モデルを示す。\n",
        "\n",
        "|在庫モデル|需要|観測|\n",
        "|--|--|--|\n",
        "|EOQモデル|決定論的|連続観測|\n",
        "|Wagner-Whitin|決定論的|周期観測|\n",
        "|安全在庫|確率的|連続観測|\n",
        "|新聞売り子問題|確率的|周期観測|\n",
        "\n",
        "## 在庫の費用\n",
        "\n",
        "ここでは、在庫に関わる費用を紹介する。\n",
        "\n",
        "発注費用（ordering cost）\n",
        ": 発注量に関わらず、1回の発注にかかる費用。調達費用、固定費用（fixed cost）などとも呼ばれる。通常、1回の発注にかかる費用を $K$ とする。\n",
        "\n",
        "購入費用（purchase cost）\n",
        ": 商品を購入するためにかかる費用。通常、単位あたりの購入費用を $c$ とする。\n",
        "\n",
        "欠品費用（stockout cost）\n",
        ": 需要が在庫を上回った場合に発生する費用。通常、単位あたりの欠品費用を $p$ とする。\n",
        "\n",
        "保管費用（holding cost）\n",
        ": 在庫を保管するためにかかる倉庫費用、保険費用、税金、機会費用など。通常、単位時間あたりの1単位あたりの保管費用を $h$ とする。\n",
        "\n",
        "例えば、1日あたり1単位の在庫を保管するために、$h$ の費用がかかるとする。30日間、50単位の在庫を保管するための総保管費用は $30 \\times 50 \\times h = 1500h$ となる。下の図を見ると、保管費用は\n",
        "\n",
        "$$\n",
        "\\text{面積} \\times h = 1500h\n",
        "$$\n",
        "\n",
        "となることがわかる。"
      ],
      "id": "686ca9ce"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "t = np.linspace(0, 30, 1000)\n",
        "inventory = np.full_like(t, 50)\n",
        "\n",
        "# Plotting the inventory level\n",
        "plt.fill_between(t, inventory, color=\"lightgray\", alpha=0.5, label=\"Inventory Level\")\n",
        "plt.plot(t, inventory, label=\"Inventory Level\", color=\"black\", linewidth=2)\n",
        "plt.xlabel(\"Time\")\n",
        "plt.ylabel(\"Inventory Level\")\n",
        "plt.axhline(0, color=\"gray\", linewidth=1)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "4b14ba9a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "一般的に、在庫量が定数ではなく、時間とともに変化する。例えば、発注量を $500$ とし、6 日間の在庫量を考える。"
      ],
      "id": "479cc923"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Parameters\n",
        "d = 250  # Demand rate\n",
        "Q = 500  # Order quantity\n",
        "T = Q / d  # Cycle length\n",
        "t = np.linspace(0, 2.999 * T, 1000)\n",
        "\n",
        "# Inventory level over time\n",
        "inventory = np.maximum(0, Q - (d * t) % Q)\n",
        "\n",
        "# Plotting the inventory level\n",
        "plt.fill_between(t, inventory, color=\"lightgray\", alpha=0.5, label=\"Inventory Level\")\n",
        "plt.plot(t, inventory, label=\"Inventory Level\", color=\"black\", linewidth=2)\n",
        "plt.xlabel(\"Time\")\n",
        "plt.ylabel(\"Inventory Level\")\n",
        "plt.axhline(0, color=\"gray\", linewidth=1)\n",
        "plt.ylim(bottom=0, top=Q + 200)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "174ea9eb",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "保管費用は次のように計算される。\n",
        "\n",
        "$$\n",
        "\\frac{2 \\times 500}{2} \\times 3 \\times h\n",
        "$$\n",
        "<!-- \n",
        "## Note\n",
        "\n",
        "- [在庫最適化と安全在庫配置システム MESSA (MEta Safety Stock Allocation system)](https://scmopt.github.io/manual/03inventory.html)\n",
        "- [Snyder (2023)](https://doi.org/10.1287/educ.2023.0256)はStockpylという在庫最適化とシミュレーションのためのPythonライブラリを開発した。\n",
        "\n",
        "https://orsj.org/wp-content/or-archives50/pdf/bul/Vol.30_11_673.pdf\n",
        "\n",
        "\n",
        "### 用語\n",
        "\n",
        "| 英語                    | 日本語       |\n",
        "| ----------------------- | ------------ |\n",
        "| Economic Order Quantity | 経済的発注量 |\n",
        "| Deterministic           | 決定論的     |\n",
        "| Constant                | 一定         |\n",
        "| Demand Rate             | 需要率       |\n",
        "| Fixed Cost              | 固定費用     |\n",
        "| Cycle                   | サイクル     |\n",
        "| Inventory Level         | 在庫量       |\n",
        "| Order Quantity          | 発注量       |\n",
        "\n",
        "### 記号\n",
        "\n",
        "|  記号  | 説明                   |\n",
        "| :----: | :--------------------- |\n",
        "|  $d$   | 単位時間あたりの需要量 |\n",
        "|  $Q$   | 発注量                 |\n",
        "|  $K$   | 発注費用               |\n",
        "|  $h$   | 保管費用               |\n",
        "|  $c$   | 購入単価               |\n",
        "|  $T$   | サイクル期間           |\n",
        "| $g(Q)$ | 平均コスト             | -->"
      ],
      "id": "0e55080c"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/opt/miniconda3/envs/quarto-book/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}