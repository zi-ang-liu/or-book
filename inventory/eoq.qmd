---
title: 経済的発注量
format:
  html:
    code-fold: true
jupyter: python3
---

**経済的発注量**（EOQ: Economic Order Quantity）モデルは、最も基本的な在庫管理モデルの一つである。@Harris1990-gh がこのモデルを最初に提案した。

EOQモデルは、単位時間あたりの需要量は決定論的で、一定であると仮定する。すなわち、需要量は事前に分かっており、時間とともに変化しない。単位時間あたりの需要量は需要率（demand rate）と呼ばれ、記号 $d$ で表される。リードタイムは0とし、発注から納品までの時間はないと仮定する。一回の発注量を $Q$ とし、一定であるとする。欠品は許せないとする。全ての需要は満されなければならない。また、EOQモデルでは、在庫量は連続的に観測され、いつでも発注が可能であるとする。

在庫に関わる費用は、1回あたりの発注費用 $K$、単位時間あたりの1単位の保管費用 $h$ と、購入単価 $c$ がある。

EOQモデルの最適解は次の二つの性質を持つ[@Snyder2019-cy]：

1. Zero-inventory ordering (ZIO). 在庫量が0のときに発注を行う。リードタイムは0であるため、在庫量が0でないときに発注すると、保管費用が発生する。
2. Constant order sizes. 発注量は一定である。需要率 $d$ が一定であり、在庫量が0のときに発注を行うため、最適発注量も一定である。

以上の性質から、在庫量の時間的変化は下図のようになる。

```{python}
import matplotlib.pyplot as plt
import numpy as np

# Parameters
d = 250  # Demand rate
Q = 500  # Order quantity
T = Q / d  # Cycle length
t = np.linspace(0, 3 * T, 1000)  # Time from 0 to 3 cycles

# Inventory level over time
inventory = np.maximum(0, Q - (d * t) % Q)
inventory[0] = 0

# Plotting the inventory level
plt.plot(t, inventory, label="Inventory Level", color="black", linewidth=2)
plt.xlabel("Time")
plt.ylabel("Inventory Level")
plt.axhline(0, color="gray", linewidth=1)
plt.ylim(bottom=0, top=Q + 100)
plt.tight_layout()
plt.show()
```

発注の間隔を**サイクル**(cycle)と呼び、サイクル期間は 

$$
T = \frac{Q}{d}
$$

で与えられる。

:::{#exm-cycle}

A社は、毎月250個の需要がある商品を取り扱っている。一回の発注量は500個とし、サイクル期間は

$$
T = \frac{500}{250} = 2 \text{ヶ月}
$$

となる。
:::

## 記号

| 記号 | 意味 |
|:---|:---|
| $d$ | 単位時間あたりの需要量 |
| $K$ | 1回あたりの発注費用 |
| $h$ | 単位時間あたりの1単位の保管費用 |
| $c$ | 購入単価 |
| $Q$ | 発注量 |
| $T$ | サイクル期間 |
| $g(Q)$ | 平均コスト |

## コスト関数

ここでは、1サイクルあたりのコストを考える。

**発注費用**：発注は1回だけ行うため、発注費用は $K$ である。

**購入費用**：$Q$ 個の商品を単価 $c$ で購入するため、購入費用は $cQ$ である。

**保管費用**：サイクル期間 $T$ は $\frac{Q}{d}$ であるため、1サイクルあたりの保管費用は

$$
\frac{TQ}{2} h = \frac{hQ^2}{2d}
$$

となる。

以上より、1サイクルあたりのコストは次のように表される。

$$
K + cQ + \frac{hQ^2}{2d}
$$

**平均コスト**は、これをサイクル期間 $T$ で割ったものとして定義される。したがって、平均コスト $g(Q)$ は次のように表される。

\begin{align*}
g(Q) &= \frac{1}{T} \left( K + cQ + \frac{hQ^2}{2d} \right) \\
&= \frac{d}{Q} \left( K + cQ + \frac{hQ^2}{2d} \right) \\
&= \frac{Kd}{Q} + c d + \frac{hQ}{2}
\end{align*}

以上より、平均コストは発注量 $Q$ の関数として次のように表される。

$$
g(Q) = \frac{Kd}{Q} + cd + \frac{hQ}{2}
$$


## 最適発注量

EOQモデルの目的は、平均コスト $g(Q)$ を最小化する発注量 $Q$ を求めることである。

:::{.callout-note}
## 極値（Extremum）
1変数関数 $f(x)$ が点 $x = a$ で極値をとるとき、

$$
f'(a) = 0
$$ 
が成り立つ。
$f''(a) > 0$ のとき、$f(a)$ は極小値をとる。
$f''(a) < 0$ のとき、$f(a)$ は極大値をとる。
:::

:::{.callout-note}
## 凸関数（Convex Function）
1 変数 2 階微分可能な関数 $f(x)$ が凸関数であることの必要十分条件は、すべての $x$ について

$$
f''(x) \geq 0
$$ 

が成り立つことである。

凸関数 $f(x)$ の極小値は、最小値である。
:::

平均コストの導関数 $g'(Q)$ が 0 となる点を求めることで、最適発注量 $Q^*$ を求めることができる。

$$
g'(Q) = -\frac{Kd}{Q^2} + \frac{h}{2} = 0
$$

これを解くと、最適発注量

$$
Q^* = \sqrt{\frac{2Kd}{h}}
$$

を得る。これを**EOQ公式**（EOQ formula）と呼ぶ。$Q^*$ を経済的発注量と呼ぶ（経済的は最適という意味である）。

二階導関数 $g''(Q)$ を求めて、最適発注量が最小値を与えることを確認する。

$$
g''(Q) = \frac{2Kd}{Q^3} > 0
$$

$g''(Q) > 0$ であるため、$Q^*$ は最小値を与える。

最適発注量 $Q^*$ を次の定理にまとめる。

:::{#thm-eoq}
EOQモデルにおいて、最適発注量 $Q^*$ は
$$
Q^* = \sqrt{\frac{2Kd}{h}}
$$ {#eq-eoq}

で与えられる。
:::

$Q^*$ を用いて、最適なサイクル期間 $T^*$ を求めることができる。

$$
T^* = \frac{Q^*}{d} = \sqrt{\frac{2K}{hd}}
$$ {#eq-eoq-cycle}

@eq-eoq と @eq-eoq-cycle から、以下の性質がわかる。

1. $h$ の増加に伴い、$Q^*$ は減少する。保管費用が高い場合は、少量で高い頻度で発注することが望ましい。
2. $K$ の増加に伴い、$Q^*$ は増加する。発注費用が高い場合は、多量で低い頻度で発注することが望ましい。
3. $d$ の増加に伴い、$Q^*$ は増加する。
4. $c$ は $Q^*$ に影響しない。購入単価は最適発注量に影響しない。

次の図は、購入単価を $c = 0$ とするとき、平均コスト $g(Q)$、発注コスト $\frac{Kd}{Q}$、保管コスト $\frac{hQ}{2}$ のグラフを示す。

```{python}
# Parameters
K = 40  # Order cost
h = 10  # Holding cost
d = 5  # Demand rate
Q = np.linspace(1, 40, 400)  # Order quantity from 1 to 40

# Cost calculations
order_cost = K * d / Q
holding_cost = (h * Q) / 2
average_cost = order_cost + holding_cost
optimal_Q = np.sqrt(2 * K * d / h)

# Plotting the costs
plt.plot(Q, order_cost, label=r"$Kd/Q$", color="blue")
plt.plot(Q, holding_cost, label=r"$hQ/2$", color="orange")
plt.plot(Q, average_cost, label=r"$g(Q)$", color="green", linewidth=2)
plt.axvline(optimal_Q, color="red", linestyle="--", label=r"$Q^*$")
plt.xlabel("Order Quantity Q")
plt.ylabel("Cost")
plt.ylim(bottom=0)
plt.legend()
plt.tight_layout()
plt.show()

```

平均コストが最小となる発注量 $Q^*$ は、発注コストと保管コストの交差点である。すなわち、発注コストと保管コストを等しくする発注量は最適な発注量 $Q^*$ である。この性質は以下の式からわかる。

$$
\frac{Kd}{Q^*} = \frac{hQ^*}{2} \Longrightarrow Q^* = \sqrt{\frac{2Kd}{h}}
$$

また、この図からもわかるように、$Q$ の増加に伴い、平均発注コストは減少し、平均保管コストは増加する。逆もまた然りである。


:::{#exm-eoq}

ある電気量販店では、毎月250台のPCが販売されている。発注費用は5000円、保管費用は1台あたり月150円、購入単価は10万円とする。このとき、最適発注量 $Q^*$ は次のように求められる。

$$
Q^* = \sqrt{\frac{2 \cdot 5000 \cdot 250}{150}}
$$

Excel では、下記のように計算できる。

```excel
=SQRT(2 * 5000 * 250 / 150)
```

Python では、次のように`eoq(K, d, h)` 関数を定義し、最適発注量を計算できる。

```{python} 
# | code-fold: false


def eoq(K, d, h):
    """
    Calculate the Economic Order Quantity (EOQ).

    Parameters:
    K (float): Order cost
    d (float): Demand rate
    h (float): Holding cost

    Returns:
    float: Optimal order quantity Q*
    """
    return np.sqrt(2 * K * d / h)


if __name__ == "__main__":
    K = 5000  # Order cost
    d = 250  # Demand rate (units per month)
    h = 150  # Holding cost (per unit per month)

    Q_star = eoq(K, d, h)
    T_star = Q_star / d
    print(f"Optimal Order Quantity (Q*): {Q_star:.2f}")
    print(f"Optimal Cycle Time (T*): {T_star:.2f}")
```

PCの場合は、注文量が整数である必要があるため、$g(129)$ と $g(130)$ を比較して最適発注量を決定する。
::: 

## リードタイム

EOQ モデルでは、リードタイムは0と仮定している。リードタイムが $L > 0$ の場合も、最適発注量 $Q^*$ も変換せず、$L$ 期間前に $Q^*$ を発注すればよい。

ここでは、$r$ を発注点（reorder point）とする。在庫量が $r$ になったときに発注を行う。リードタイム $L$ の間に需要が $dL$ 個あるため、発注点は次のように表される。

$$
r = dL
$$

:::{#exm-reorder-point}
上の例で、リードタイムが一週間とし、一か月を4週間とすると、リードタイムは $L = 1/4$ となる。したがって、発注点は次のように求められる。

$$
r = dL = 250 \times \frac{1}{4} = 62.5
$$

PCの在庫量が63台になったときに発注を行う。
:::

## 他のEOQモデル

- バックオーダーを考慮したEOQモデル
- 数量割引（quantity discount）を考慮したEOQモデル
  - 総量割引（all-units discount）
  - 増分割引（incremental discount）

<!-- 1. 
2. 需要率を $d$、発注費用を $K$、保管費用を $h$，購入単価を $c$ とする。EOQモデルにおける平均コスト $g(Q)$ を発注量 $Q$ の関数として導出せよ。
3. $g(Q)$ を最小化する発注量 $Q^*$ を導出せよ。なぜ $Q^*$ が最小値を与えるのか説明せよ。 -->

## 文献案内

オペレーションズ・リサーチに関する教科書の多くは、EOQモデルを取り扱っている。モデルの分類から、「deterministic continuous-review inventory models」などの章で説明されていることが多い。

リードタイムを考慮したEOQモデルについては、@Snyder2019-cy で説明されている。

数量割引を考慮したEOQモデルについては、@Snyder2019-cy 、@Camm2022-zv で説明されている。

バックオーダーを考慮したEOQモデルについては、@Snyder2019-cy 、@Camm2022-zv 、@Hillier2025-cb で説明されている。

## 練習問題

:::{#exr-eoq-cycle}
ある会社は、毎月300個の需要がある商品を取り扱っている。一回の発注量は600個とし、サイクル期間 $T$ を求めよ。
:::

:::{#exr-eoq-year}
ある工場は、鋼材を毎日16トン消費し、年間250日稼働している。鋼材の購入単価は1トンあたり1100ドル、1回の発注にかかる固定費は5500ドル、保管費は鋼材1トンあたり年間は275ドルである。EOQモデルにより以下を求めよ。

1. 最適な発注量
2. サイクル期間
3. 年間平均コスト
:::

   
## 解答

:::{#sol-eoq-cycle}
需要率は $d = 300$、発注量は $Q = 600$ である。したがって、サイクル期間 $T$ は以下のように求められる。

$$
T = \frac{Q}{d} = \frac{600}{300} = 2 \text{ヶ月}
$$
:::

:::{#sol-eoq-year}
需要率は $d = 4000$、発注費用は $K = 5500$、保管費用は $h = 275$、購入単価は $c = 1100$ である。

```{python}
K = 5500  # Order cost
d = 4000  # Demand rate (units per year)
h = 275  # Holding cost (per unit per year)
c = 1100  # Purchase cost (per unit)

Q_star = np.sqrt(2 * K * d / h)
T_star = Q_star / d
g_avg = (K * d / Q_star) + (c * d) + (h * Q_star / 2)
print(f"Optimal Order Quantity (Q*): {Q_star:.2f} tons")
print(f"Optimal Cycle Time (T*): {T_star:.2f} years")
print(f"Average Annual Cost (g(Q*)): {g_avg:.2f} dollars")
```
:::